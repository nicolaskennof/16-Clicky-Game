{"version":3,"sources":["components/Score.js","components/Header.js","components/Footer.js","components/SimpleCard.js","components/CardContainer.js","components/Wrapper.js","pages/Index.js","App.js","serviceWorker.js","index.js"],"names":["Score","props","react_default","a","createElement","concat","label","value","withStyles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","color","borderRadius","height","backgroundColor","classes","className","Grid_default","container","item","xs","Paper_default","components_Score","score","hscore","SimpleCard","role","onClick","onClickImage","id","alt","image","src","CardContainer","state","characters","selected","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","characterClickHandle","selectedCharacters","_this","includes","setState","onEndGame","push","onScoreChange","_this2","this","map","character","components_SimpleCard","key","Component","Wrapper","children","Index","scoreChangeHandle","loose","alert","Header","components_Wrapper","components_CardContainer","Footer","App","pages_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uTAQeA,MANf,SAAeC,GACX,OACIC,EAAAC,EAAAC,cAAA,eAAAC,OAAUJ,EAAMK,MAAhB,OAAAD,OAA2BJ,EAAMM,SCyC1BC,2BArCA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAA8B,EAArBJ,EAAMK,QAAQC,KACvBC,UAAW,SACXC,MAAO,QACPC,aAAc,EACdC,OAAQ,OACRC,gBAAiB,aA2BNZ,CAvBf,SAAsBP,GAAO,IACnBoB,EAAYpB,EAAZoB,QAER,OACEnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAWD,EAAQX,MACtBR,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAMqB,WAAS,EAACV,QAAS,GACvBZ,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAMsB,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAOmB,UAAWD,EAAQT,OACxBV,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,qFACAF,EAAAC,EAAAC,cAACwB,EAAD,CAAOtB,MAAM,QAAQC,MAAON,EAAM4B,QAHpC,MAIE3B,EAAAC,EAAAC,cAACwB,EAAD,CAAOtB,MAAM,iBAAiBC,MAAON,EAAM6B,eCSxCtB,2BAnCA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAA8B,EAArBJ,EAAMK,QAAQC,KACvBC,UAAW,SACXC,MAAO,QACPC,aAAc,EACdC,OAAQ,OACRC,gBAAiB,aAyBNZ,CArBf,SAAsBP,GAAO,IACnBoB,EAAYpB,EAAZoB,QAER,OACEnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAWD,EAAQX,MACtBR,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAMqB,WAAS,EAACV,QAAS,GACvBZ,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAMsB,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAOmB,UAAWD,EAAQT,OACxBV,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mFCjBA2B,MAVf,SAAoB9B,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAK4B,KAAK,MAAMV,UAAU,2CACtBpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,sBACfpB,EAAAC,EAAAC,cAAA,OAAK6B,QAAS,kBAAIhC,EAAMiC,aAAajC,EAAMkC,KAAKb,UAAU,iBAAiBc,IAAKnC,EAAMoC,MAAOC,IAAG,eAAAjC,OAAiBJ,EAAMoC,oBC8DpHE,6MA/DXC,MAAQ,CACJC,WAAYA,EACZC,SAAU,MAGdC,QAAU,SAAAC,GAGN,IAFA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAElB,IAAMD,GAETD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEzB,OAAOD,KAGXQ,qBAAuB,SAACjB,GACpB,IAAIkB,EAAqBC,EAAKd,MAAME,SACpC,OAAKW,EAAmBE,SAASpB,IAW7BmB,EAAKE,SAAS,CACVd,SAAU,UAEdY,EAAKrD,MAAMwD,WAAU,KAbrBJ,EAAmBK,KAAKvB,GACQ,KAA5BkB,EAAmBL,QACnBM,EAAKE,SAAS,CACVd,SAAU,KAEdY,EAAKrD,MAAM0D,qBACXL,EAAKrD,MAAMwD,WAAU,KAW7BH,EAAKE,SAAS,CACVf,WAAYa,EAAKX,QAAQW,EAAKd,MAAMC,YACpCC,SAAUW,SAEdC,EAAKrD,MAAM0D,2FAGN,IAAAC,EAAAC,KACL,OACI3D,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,OAEPuC,KAAKlB,QAAQkB,KAAKrB,MAAMC,YAAYqB,IAAI,SAAAC,GACpC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,CACH9B,aAAc0B,EAAKR,qBACnBa,IAAKF,EAAU5B,GACfA,GAAI4B,EAAU5B,GACdE,MAAO0B,EAAU1B,kBA1DjB6B,oBCGbC,MAJf,SAAiBlE,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,WAAWrB,EAAMmE,WC0C1BC,qNApCb7B,MAAQ,CACNX,MAAO,EACPC,OAAQ,KAGVwC,kBAAoB,WAClB,IAAIzC,EAAQyB,EAAKd,MAAMX,MACnBC,EAASwB,EAAKd,MAAMV,OAEpBA,IADJD,IACoBC,EAASD,GAC7ByB,EAAKE,SAAS,CACZ3B,QACAC,cAIJ2B,UAAY,SAACc,GACPA,GAAOC,MAAM,yBACZD,GAAOC,MAAM,WAClBlB,EAAKE,SAAS,CAAE3B,MAAO,6EAIvB,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqE,EAAD,CAAQ5C,MAAOgC,KAAKrB,MAAMX,MAAOC,OAAQ+B,KAAKrB,MAAMV,SACpD5B,EAAAC,EAAAC,cAACsE,EAAD,KACExE,EAAAC,EAAAC,cAACuE,EAAD,CAAelB,UAAWI,KAAKJ,UAAWE,cAAeE,KAAKS,qBAEhEpE,EAAAC,EAAAC,cAACwE,EAAD,cA/BYV,cCMLW,2LARX,OACE3E,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,OACbpB,EAAAC,EAAAC,cAAC0E,EAAD,cAJUZ,cCQEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ef0aaa77.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Score(props) {\r\n    return (\r\n        <span>{`${props.label} : ${props.value}`}</span>\r\n    )\r\n}\r\n\r\nexport default Score","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import Background from '../public/assets/img/background.jpg';\r\nimport Score from '../components/Score.js'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 5,\r\n    textAlign: 'center',\r\n    color: \"white\",\r\n    borderRadius: 0,\r\n    height: \"auto\",\r\n    backgroundColor: \"#2C312A\"\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <h1>Band of Brothers Game!</h1>\r\n            <p>Click on an image to earn points, but don't click on any more than once!</p>\r\n            <Score label=\"Score\" value={props.score}></Score> || \r\n            <Score label=\" Highest Score\" value={props.hscore}></Score>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import Background from '/assets/img/background.jpg';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: 'center',\r\n    color: \"white\",\r\n    borderRadius: 0,\r\n    height: \"auto\",\r\n    backgroundColor: \"#2C312A\"\r\n  }\r\n});\r\n\r\nfunction CenteredGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <h1>Sir, Yes Sir!</h1>\r\n            <p><b>The highest possible score is 11 points! Good luck dude!</b></p>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nCenteredGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CenteredGrid);\r\n","import React from \"react\";\r\nimport \"./simplecard.css\"\r\n\r\nfunction SimpleCard(props) {\r\n    return (\r\n        <div role=\"img\" className=\"p-0 text-center col-6 col-sm-4 col-md-3\">\r\n            <div className=\"characterContainer\">\r\n            <img onClick={()=>props.onClickImage(props.id)} className=\"characterImage\" alt={props.image} src={`/assets/img/${props.image}`} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleCard;","import React, { Component } from 'react'\r\nimport SimpleCard from './SimpleCard.js'\r\nimport characters from \"../characters.json\";\r\n\r\nclass CardContainer extends Component {\r\n\r\n    state = {\r\n        characters: characters,\r\n        selected: []\r\n    }\r\n\r\n    shuffle = array => {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        while (0 !== currentIndex) {\r\n\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    characterClickHandle = (id) => {\r\n        let selectedCharacters = this.state.selected;\r\n        if (!selectedCharacters.includes(id)) {\r\n            selectedCharacters.push(id);\r\n            if (selectedCharacters.length===12) {\r\n                this.setState({\r\n                    selected: []\r\n                })\r\n                this.props.onScoreChange();\r\n                this.props.onEndGame(false);\r\n                return;\r\n            }\r\n        } else {\r\n            this.setState({\r\n                selected: []\r\n            })\r\n            this.props.onEndGame(true);\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            characters: this.shuffle(this.state.characters),\r\n            selected: selectedCharacters\r\n        })\r\n        this.props.onScoreChange();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    this.shuffle(this.state.characters).map(character => {\r\n                        return <SimpleCard\r\n                            onClickImage={this.characterClickHandle}\r\n                            key={character.id}\r\n                            id={character.id}\r\n                            image={character.image} />\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CardContainer","import React from \"react\";\r\nimport \"./wrapper.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from 'react';\r\n//import NavBar from \"../components/NavBar\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport CardContainer from \"../components/CardContainer\";\r\nimport Wrapper from \"../components/Wrapper\"\r\nimport './index.css';\r\n\r\nclass Index extends Component {\r\n\r\n  state = {\r\n    score: 0,\r\n    hscore: 0\r\n  }\r\n\r\n  scoreChangeHandle = () => {\r\n    let score = this.state.score;\r\n    let hscore = this.state.hscore;\r\n    score++;\r\n    if (hscore < score) hscore = score;\r\n    this.setState({\r\n      score,\r\n      hscore \r\n    })\r\n  }\r\n\r\n  onEndGame = (loose) => {\r\n    if (loose) alert(\"You loose, try again!\")\r\n    if (!loose) alert(\"You win\")\r\n    this.setState({ score: 0 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header score={this.state.score} hscore={this.state.hscore} />\r\n        <Wrapper>\r\n          <CardContainer onEndGame={this.onEndGame} onScoreChange={this.scoreChangeHandle} />\r\n        </Wrapper>\r\n        <Footer />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\nimport Index from './pages/Index.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Index/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}